//-----------------------------------------------------------------------------
template <typename T>
Tuple2<T>::Tuple2():
x_(0), y_(0)
{
    // empty
}

//-----------------------------------------------------------------------------
template <typename T>
Tuple2<T>::Tuple2(T x, T y):
x_(x), y_(y)
{
    // empty
}

//-----------------------------------------------------------------------------
template <typename T>
void Tuple2<T>::clear()
{
    x_ = y_ = 0;
}

//-----------------------------------------------------------------------------
template <typename T>
void Tuple2<T>::set(T x, T y)
{
    x_ = x;
    y_ = y;
}

//-----------------------------------------------------------------------------
template <typename T>
void Tuple2<T>::set(int i, T value)
{
    a_[i] = value;
}

//-----------------------------------------------------------------------------
template <typename T>
const T& Tuple2<T>::operator [] (int i) const
{
    return a_[i];
}

//-----------------------------------------------------------------------------
template <typename T>
T& Tuple2<T>::operator [] (int i)
{
    return a_[i];
}

//-----------------------------------------------------------------------------
template <typename T>
T Tuple2<T>::x() const
{
    return x_;
}

//-----------------------------------------------------------------------------
template <typename T>
T Tuple2<T>::y() const
{
    return y_;
}
